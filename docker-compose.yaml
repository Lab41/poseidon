---
version: '3.7'
services:
    rabbit:
        restart: always
        image: 'iqtlabs/rabbitmq:latest'
        ports:
            - '127.0.0.1:15672:15672'
            - '5672:5672'
        networks:
            poseidon:
                aliases:
                    - RABBIT_SERVER
                    - rabbitmq
                    - messenger
        build:
            context: helpers/rabbitmq
            dockerfile: Dockerfile
    network_tap:
        restart: always
        image: 'iqtlabs/network_tap:v0.11.23'
        volumes:
            - '/var/run/docker.sock:/var/run/docker.sock'
            - '${POSEIDON_PREFIX}/opt/poseidon_files:/files'
        environment:
            PYTHONUNBUFFERED: '1'
            KEEPIMAGES: '0'
        networks:
            poseidon:
    poseidon_api:
        restart: always
        image: 'iqtlabs/poseidon-api:latest'
        ports:
            - '5000:8000'
        environment:
            PYTHONUNBUFFERED: '1'
        volumes:
            - '${POSEIDON_PREFIX}/opt/poseidon:/opt/poseidon'
        networks:
            poseidon:
                aliases:
                    - poseidon-api
        depends_on:
            - poseidon
        build:
            context: helpers/api
            dockerfile: Dockerfile
    poseidon:
        restart: always
        image: 'iqtlabs/poseidon:latest'
        ports:
            - '9304:9304'
        environment:
            PYTHONUNBUFFERED: '1'
        volumes:
            - '${POSEIDON_PREFIX}/opt/poseidon:/opt/poseidon'
            - '${POSEIDON_PREFIX}/var/log/poseidon:/var/log/poseidon'
            - '${POSEIDON_PREFIX}/opt/faucetconfrpc:/certs'
        networks:
            - poseidon
        depends_on:
            - rabbit
        build:
            context: .
            dockerfile: Dockerfile
    workers:
        restart: always
        image: 'iqtlabs/poseidon-workers:latest'
        environment:
            PYTHONUNBUFFERED: '1'
            KEEPIMAGES: '0'
            VOL_PREFIX: '${POSEIDON_PREFIX}'
            SWARM: '${POSEIDON_SWARM}'
        networks:
            - poseidon
        volumes:
            - '/var/run/docker.sock:/var/run/docker.sock'
        depends_on:
            - poseidon
        build:
            context: workers
            dockerfile: Dockerfile
networks:
    poseidon:
        driver: overlay
